=== HOWDOI TOOL INTERACTION ===

Timestamp: 20250406_114035

=== INPUT ===
Query: what is machine learning

=== OUTPUT ===
# Stack Overflow Solution

Query: 'what is machine learning'

## Solution:

What is a machine learning ?





Essentially, it is a method of teaching computers to make and improve predictions or behaviors based on some data. What is this "data"? Well, that depends entirely on the problem. It could be readings from a robot's sensors as it learns to walk, or the correct output of a program for certain input.



Another way to think about machine learning is that it is "pattern recognition" - the act of teaching a program to react to or recognize patterns.




  
What does machine learning code do ?





Depends on the type of machine learning you're talking about. Machine learning is a huge field, with hundreds of different algorithms for solving myriad different problems - see [Wikipedia](http://en.wikipedia.org/wiki/Machine_learning) for more information; specifically, look under [Algorithm Types](http://en.wikipedia.org/wiki/Machine_learning#Algorithm_types).




  
When we say machine learns, does it modify the code of itself or it modifies history (Data Base) which will contain the experience of code for given set of inputs ?





Once again, it depends.



One example of code actually being modified is [Genetic Programming](http://en.wikipedia.org/wiki/Genetic_programming), where you essentially evolve a program to complete a task (of course, the program doesn't modify itself - but it does modify another computer program).



[Neural networks](http://en.wikipedia.org/wiki/Artificial_neural_network), on the other hand, modify their parameters automatically in response to prepared stimuli and expected response. This allows them to produce many behaviors (theoretically, they can produce any behavior because they can approximate any function to an arbitrary precision, given enough time).







I should note that your use of the term "database" implies that machine learning algorithms work by "remembering" information, events, or experiences. This is not necessarily (or even often!) the case.



Neural networks, which I already mentioned, only keep the current "state" of the approximation, which is updated as learning occurs. Rather than remembering what happened and how to react to it, neural networks build a sort of "model" of their "world." The model tells them how to react to certain inputs, even if the inputs are something that it has never seen before.



This last ability - the ability to react to inputs that have never been seen before - is one of the core tenets of many machine learning algorithms. Imagine trying to teach a computer driver to navigate highways in traffic. Using your "database" metaphor, you would have to teach the computer exactly what to do in millions of possible situations. An effective machine learning algorithm would (hopefully!) be able to learn similarities between different states and react to them similarly.



The similarities between states can be anything - even things we might think of as "mundane" can really trip up a computer! For example, let's say that the computer driver learned that when a car in front of it slowed down, it had to slow down to. For a human, replacing the car with a motorcycle doesn't change anything - we recognize that the motorcycle is also a vehicle. For a machine learning algorithm, this can actually be surprisingly difficult! A database would have to store information separately about the case where a car is in front and where a motorcycle is in front. A machine learning algorithm, on the other hand, would "learn" from the car example and be able to generalize to the motorcycle example automatically.
